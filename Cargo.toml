[workspace]
resolver = "2"
members = [
    ".",
    "threatflux-binary-analysis",
    "threatflux-cache",
    "threatflux-hashing",
    "threatflux-package-security",
    "threatflux-string-analysis",
    "threatflux-threat-detection",
]
exclude = []

# Workspace-wide dependency specifications for consistency
[workspace.dependencies]
# Core Rust async and runtime
tokio = { version = "1.47", features = ["full"] }
async-trait = "0.1"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# CLI and configuration
clap = { version = "4.5", features = ["derive"] }

# File and system utilities
filetime = "0.2"
chrono = { version = "0.4", features = ["serde"] }
memmap2 = "0.9"
walkdir = "2.4"

# Hashing algorithms
sha2 = "0.10"
md-5 = "0.10"
blake3 = "1.5"

# String processing
regex = "1.10"
encoding_rs = "0.8"

# Binary parsing
goblin = "0.10"
object = "0.37"

# Cryptography and signatures
ring = "0.17"

# MCP SDK
rmcp = { version = "=0.5.0", features = ["transport-io"] }
schemars = "1.0"

# HTTP server
axum = { version = "0.8", features = ["ws"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors"] }
hyper = "1.5"
tokio-stream = "0.1"
futures-util = "0.3"
uuid = { version = "1.0", features = ["v4"] }

# OpenAPI documentation
utoipa = { version = "5.4", features = ["axum_extras", "chrono", "uuid"] }
utoipa-redoc = { version = "6.0", features = ["axum"] }
utoipa-swagger-ui = { version = "9.0", features = ["axum"] }

# Static analysis
addr2line = "0.25"
capstone = "0.13"
petgraph = "0.8.2"

# Threat detection
yara-x = "1.5.0"

# Network and repository checks
strsim = "0.11"
reqwest = { version = "0.12", features = ["json", "blocking"] }
git2 = "0.20"
url = "2.5"
edit-distance = "2.1"

# Archive handling
cfb = "0.11"
zip = "4.3"
flate2 = "1.0"
tar = "0.4"

# XML and data processing
quick-xml = "0.38"
base64 = "0.22"

# Test dependencies
tempfile = "3.8"
mockall = "0.13"
proptest = "1.4"
rstest = "0.26"
criterion = { version = "0.7", features = ["html_reports"] }
pretty_assertions = "1.4"
test-case = "3.3"
serial_test = "3.0"
predicates = "3.0"
assert_fs = "1.1"
assert_cmd = "2.0"
rand = "0.9"
libc = "0.2"
tokio-test = "0.4"
wiremock = "0.6"
once_cell = "1.19"

[workspace.metadata.docs]
# Workspace-wide documentation configuration
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[workspace.metadata.release]
# Release configuration for all workspace members
shared-version = true
tag-name = "v{{version}}"
pre-release-replacements = [
    { file = "CHANGELOG.md", search = "Unreleased", replace = "{{version}}" },
    { file = "CHANGELOG.md", search = "\\.\\.\\.HEAD", replace = "...{{tag_name}}" },
    { file = "CHANGELOG.md", search = "ReleaseDate", replace = "{{date}}" },
]

# Main file-scanner package configuration
[package]
name = "file-scanner"
version = "0.1.1"
edition = "2021"
authors = ["File Scanner Project <dev@threatflux.com>"]
description = "A comprehensive file analysis framework for security research, malware detection, and forensic investigation"
homepage = "https://github.com/ThreatFlux/file-scanner"
repository = "https://github.com/ThreatFlux/file-scanner"
license = "MIT"
readme = "README.md"
keywords = ["security", "malware", "forensics", "analysis", "file-scanner"]
categories = ["command-line-utilities", "development-tools", "security", "analysis"]
rust-version = "1.87.0"

[dependencies]
# ThreatFlux libraries - our modular components
threatflux-hashing = { path = "./threatflux-hashing", features = ["serde"] }
threatflux-string-analysis = { path = "./threatflux-string-analysis" }
threatflux-cache = { path = "./threatflux-cache", features = ["openapi"] }
# Note: Some libraries temporarily disabled due to compilation issues during transition
# threatflux-binary-analysis = { path = "./threatflux-binary-analysis", features = ["elf", "pe", "macho"] }
# threatflux-threat-detection = { path = "./threatflux-threat-detection", features = ["builtin-rules", "pattern-matching"] }
# threatflux-package-security = { path = "./threatflux-package-security" }

# Core dependencies (using workspace versions)
tokio = { workspace = true }
async-trait = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
clap = { workspace = true }
filetime = { workspace = true }
chrono = { workspace = true }

# Hash calculations (temporary during migration)
sha2 = { workspace = true }
md-5 = { workspace = true }
blake3 = { workspace = true }

# Binary parsing
goblin = { workspace = true }
object = { workspace = true }

# String extraction
regex = { workspace = true }
encoding_rs = { workspace = true }

# Digital signature verification
ring = { workspace = true }

# MCP SDK
rmcp = { workspace = true }
schemars = { workspace = true }

# HTTP server for MCP
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
hyper = { workspace = true }
tokio-stream = { workspace = true }
futures-util = { workspace = true }
uuid = { workspace = true }

# OpenAPI documentation
utoipa = { workspace = true }
utoipa-redoc = { workspace = true }
utoipa-swagger-ui = { workspace = true }

# Static analysis dependencies
addr2line = { workspace = true }
memmap2 = { workspace = true }
capstone = { workspace = true }
petgraph = { workspace = true }

# Threat detection
yara-x = { workspace = true }
walkdir = { workspace = true }

# Network and repository analysis
strsim = { workspace = true }
reqwest = { workspace = true }
git2 = { workspace = true }
url = { workspace = true }
edit-distance = { workspace = true }

# Archive analysis
cfb = { workspace = true }
zip = { workspace = true }
flate2 = { workspace = true }
tar = { workspace = true }

# XML and data processing
quick-xml = { workspace = true }
base64 = { workspace = true }

[dev-dependencies]
tempfile = { workspace = true }
mockall = { workspace = true }
proptest = { workspace = true }
rstest = { workspace = true }
criterion = { workspace = true }
pretty_assertions = { workspace = true }
test-case = { workspace = true }
serial_test = { workspace = true }
predicates = { workspace = true }
assert_fs = { workspace = true }
assert_cmd = { workspace = true }
rand = { workspace = true }
libc = { workspace = true }
tokio-test = { workspace = true }
reqwest = { workspace = true }
wiremock = { workspace = true }
once_cell = { workspace = true }

[[bench]]
name = "hash_benchmark"
harness = false

[[bench]]
name = "parser_benchmark"
harness = false

# Optimized profiles for different build scenarios
[profile.release]
lto = "thin"
codegen-units = 1
panic = "abort"
strip = true

[profile.test]
opt-level = 2
debug = 1
incremental = true
codegen-units = 16

[profile.test-fast]
inherits = "test"
opt-level = 3
lto = "thin"

[profile.bench]
debug = 1
lto = "thin"
codegen-units = 1

[profile.dev]
incremental = true
debug = 2