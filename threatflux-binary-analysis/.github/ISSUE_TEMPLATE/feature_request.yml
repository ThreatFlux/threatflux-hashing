name: âœ¨ Feature Request
description: Suggest a new feature or enhancement
title: "[Feature]: "
labels: ["enhancement", "needs-triage"]
assignees:
  - threatflux-team

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature! Please provide as much detail as possible.

  - type: dropdown
    id: feature-category
    attributes:
      label: Feature Category
      description: What type of feature are you requesting?
      options:
        - Binary Format Support (new format)
        - Analysis Enhancement (existing format)
        - Disassembly Engine
        - Security Analysis
        - Performance Improvement
        - API Enhancement
        - Documentation
        - Testing/Quality
        - Other
    validations:
      required: true

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: Is your feature request related to a problem? Please describe.
      placeholder: A clear and concise description of what the problem is. Ex. I'm always frustrated when...
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe the solution you'd like
      placeholder: A clear and concise description of what you want to happen.
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: Describe alternatives you've considered
      placeholder: A clear and concise description of any alternative solutions or features you've considered.
    validations:
      required: false

  - type: textarea
    id: use-case
    attributes:
      label: Use Case
      description: Describe your use case and how this feature would help
      placeholder: |
        - What are you trying to accomplish?
        - How would this feature fit into your workflow?
        - Who else might benefit from this feature?
    validations:
      required: true

  - type: dropdown
    id: binary-formats
    attributes:
      label: Binary Formats (if applicable)
      description: Which binary formats would this feature affect?
      multiple: true
      options:
        - ELF (Linux/Unix)
        - PE (Windows)
        - Mach-O (macOS)
        - WebAssembly
        - Java/Archive
        - Raw binary data
        - All formats
        - Not applicable

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - Critical - blocking my work
        - High - significantly improves my workflow
        - Medium - would be nice to have
        - Low - minor enhancement
    validations:
      required: true

  - type: textarea
    id: implementation
    attributes:
      label: Implementation Ideas
      description: Do you have ideas on how this could be implemented?
      placeholder: |
        - Any specific libraries or approaches that might be useful?
        - Are you willing to contribute to the implementation?
        - Any compatibility concerns or requirements?

  - type: textarea
    id: examples
    attributes:
      label: Examples
      description: Provide examples of how this feature would be used
      render: rust
      placeholder: |
        // Example usage of the proposed feature
        let analyzer = BinaryAnalyzer::new();
        let result = analyzer.new_feature()?;

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Are you interested in contributing to this feature?
      options:
        - label: I'm willing to implement this feature
        - label: I'm willing to help test this feature
        - label: I can provide sample files/test cases
        - label: I can help with documentation

  - type: checkboxes
    id: terms
    attributes:
      label: Code of Conduct
      description: By submitting this issue, you agree to follow our Code of Conduct
      options:
        - label: I agree to follow this project's Code of Conduct
          required: true